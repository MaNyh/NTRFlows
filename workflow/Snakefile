from snakemake.utils import validate
from snakemake.utils import Paramspace
from snakemake import load_configfile
import pandas as pd
import os


configfile : "config/workflowsettings.yaml"
validate(config,"schemas/config.schema.yaml")

AVAIL_TEMPLATES = ["openfoamCompressorCascadeRas"]

def get_filelist_fromdir(path):
    filelist = []
    for r, d, f in os.walk(path):
        for file in f:
            filelist.append(os.path.join(r, file))
    return filelist

class case_template:

    psign = "PARAM"
    osign = "OPTION"

    def __init__(self, name):
        self.name = name
        self.path = f"resources/{name}"
        self.param_schema = f"schemas/{name}/param.schema.yaml"
        self.option_schema = f"schemas/{name}/option.schema.yaml"
        self.files = [os.path.relpath(fpath, self.path) for fpath in get_filelist_fromdir(self.path)]


    """
        self.params = find_vars(self.path, self.psign)
        self.params_set = {}
        self.options = find_vars(self.path,self.osign)
        self.options_set = {}

    def set_params_options(self,params_set,options_set):
        self.params_set = params_set
        self.options_set = options_set

    def sanity_check(self):
        sanity = True
        for p in self.params.keys():
            if p not in self.params_set.keys():
                sanity=False
                warnings.warn(f"{p} not set")
        for o in self.options.keys():
            if o not in self.options_set.keys():
                sanity=False
                warnings.warn(f"{o} not set")
        return sanity
    """

CASE_TEMPLATES = {templatename: case_template(templatename) for templatename in AVAIL_TEMPLATES}

template = CASE_TEMPLATES[config["case_params"]["case_type"]]

params = pd.read_csv("config/case_params.tsv",sep="\t")
validate(params, template.param_schema)
paramspace = Paramspace(params)
options = load_configfile("config/case_options.yaml")
validate(options,template.option_schema)


include: "rules/create.smk"
include: "rules/prep.smk"

rule all:
    input :
        #*get_casefiles(),
        *get_meshdirs(),

