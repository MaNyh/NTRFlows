/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

WRITEINTERVAL <CONFIG writeinterval CONFIG>;

application     rhoPimpleFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         <CONFIG endtime CONFIG>;

deltaT          1.0e-8;

writeControl    adjustableRunTime;

writeInterval   $WRITEINTERVAL;

purgeWrite      2;

writeFormat     ascii;

writePrecision   16;

writeCompression off;

timeFormat      general;

timePrecision   16;

runTimeModifiable yes;

adjustTimeStep  on;

maxCo          0.9;

functions {

	CourantNo1
	{
    	// Mandatory entries (unmodifiable)
    	type        CourantNo;
    	libs        (fieldFunctionObjects);
	
	    // Optional entries (runtime modifiable)
	    //	rho         rho;
    writeControl    adjustableRunTime;
	writeInterval   $WRITEINTERVAL;
	
	// Optional (inherited) entries
    	
	}
fieldAverage1
{
    // Mandatory entries (unmodifiable)
    type            fieldAverage;
    libs            (fieldFunctionObjects);
    writeControl    adjustableRunTime;
    writeInterval $WRITEINTERVAL;
    timeStart       <CONFIG startave CONFIG>;
    timeEnd         1000;
    // Mandatory entries (runtime modifiable)
    fields
    (
    k{
        mean        yes;
        prime2Mean  no;
        base        time;
        }

    rho
        {
        mean        yes;
        prime2Mean  no;
        base        time;
        }
    T
        {
        mean        yes;
        prime2Mean  no;
        base        time;
        }
    p
        {
        mean        yes;
        prime2Mean  no;
        base        time;
        }
    U
        {
        mean        yes;
        prime2Mean  no;
        base        time;
        }
    );

 }


}

// ************************************************************************* //
